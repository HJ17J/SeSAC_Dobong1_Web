<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>동적 폼 전송</title>
    <style>
      body {
        background-color: #ffe0ff;
      }
      .result {
        font-size: 1.5rem;
        font-weight: 700;
      }
    </style>
    <script
      src="https://code.jquery.com/jquery-3.7.1.min.js"
      integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo="
      crossorigin="anonymous"
    ></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  </head>
  <body>
    <h1>동적 폼 연습하기</h1>
    <!-- 이름과 성별을 입력받는 폼 -->
    <form name="register">
      <input type="text" name="name" placeholder="이름을 입력해주세요" required />
      <input type="radio" name="gender" id="male" value="남자" required />
      <label for="male">남성</label>
      <input type="radio" name="gender" id="female" value="여자" required />
      <label for="female">여성</label>
      <br /><br />
      <button type="button" onclick="ajaxGet()">AJAX GET 제출</button>
      <button type="button" onclick="ajaxPost()">AJAX POST 제출</button>
      <br />
      <button type="button" onclick="axiosGet()">AXIOS GET 제출</button>
      <button type="button" onclick="axiosPost()">AXIOS POST 제출</button>
      <br />
      <button type="button" onclick="fetchGet()">Fetch GET 제출</button>
      <button type="button" onclick="fetchPost()">Fetch POST 제출</button>

      <!-- 동적 폼 전송 결과를 보여줄 곳 -->
      <div class="result"></div>
    </form>
    <script>
      const resultBox = document.querySelector('.result');

      // ajax
      function ajaxGet() {
        const form = document.forms['register'];
        const info = {
          name: form.name.value,
          gender: form.gender.value,
        };
        $.ajax({
          type: 'get',
          url: '/ajax',
          data: info,
          success: function (res) {
            console.log(res);
            resultBox.textContent = `GET AJAX 요청 완료: ${res.name}님의 성별은 ${res.gender}입니다.`;
            resultBox.style.color = 'red';
          },
          error: function (err) {
            console.log('AJAX 실패');
          },
        });
      }
      function ajaxPost() {
        const form = document.forms['register'];
        const info = {
          name: form.name.value,
          gender: form.gender.value,
        };

        $.ajax({
          type: 'post',
          url: '/ajax',
          data: info,
          success: function (res) {
            // console.log(res);
            resultBox.textContent = `POST AJAX 요청 완료: ${res.name}님의 성별은 ${res.gender}입니다.`;
            resultBox.style.color = 'orange';
          },
        });
      }

      // axios
      async function axiosGet() {
        const form = document.forms['register'];
        const info = {
          name: form.name.value,
          gender: form.gender.value,
        };
        /*
                  type button의 유효성 검사
                  checkValidity(): required 표시된 부분이 있으면 기입이 되었는지 안 되었는지 검사
                  - required가 있는 항목일 경우
                      - 값이 있다면 true, 값이 없다면 false 반환
                  - required가 없는 항목일 경우
                      - 무조건 true 반환
              */
        if (!form.name.checkValidity()) {
          resultBox.textContent = form.name.validationMessage; // 이 입력란을 작성하세요.(기본 제공 문구) 출력
        } else if (!form.gender[0].checkValidity()) {
          resultBox.textContent = form.gender[0].validationMessage; // 다음 옵션 중 하나를 선택하세요.
        } else {
          // 모든 값을 기입했을 경우에만 axios 요청
          /*          axios({
                  method: 'get',
                  url: '/axios',
                  params: info,
                });
                .then((res) => {
                  console.log(res); // 응답 데이터 전체 (data, headers, request, status, statusText...)
                  console.log(res.data); // info 값은 data에서 찾을 수 있음
                  console.log(res.status); // 200
                  console.log(res.statusText); // OK
                  console.log(res.headers); // response 헤더 데이터
                  const { name, gender } = res.data;
                  resultBox.innerText = `GET AXIOS 요청 완료: ${name}님의 성별은 ${gender}입니다.`;
                })
                .catch((err) => console.log(err)); */
          try {
            const response = await axios({
              method: 'get',
              url: `/axios?name=${info.name}&gender=${info.gender}`,
              //   params: data, // get일 때는 params로 데이터 전송
            });
            const { name, gender } = response.data;
            resultBox.innerText = `GET AXIOS 요청 완료: ${name}님의 성별은 ${gender}입니다`;
            resultBox.style.color = 'green';
          } catch (err) {
            console.log('error!!:' + err);
          }
        }
      }
      async function axiosPost() {
        const form = document.forms['register'];
        const info = {
          name: form.name.value,
          gender: form.gender.value,
        };

        try {
          const res = await axios({
            method: 'post',
            url: '/axios',
            data: info,
          });
          console.log(res.data);
          const { name: 이름, gender: 성별 } = res.data;
          resultBox.innerText = `POST AXIOS 요청 완료: ${이름}님의 성별은 ${성별}입니다`;
          resultBox.style.color = 'blue';
        } catch (err) {
          console.log('error!!: ' + err);
        }
      }

      // fetch
      function fetchGet() {
        const form = document.forms['register'];
        const info = {
          name: form.name.value,
          gender: form.gender.value,
        };

        // get일 경우 url에 쿼리스트링 작성 필수
        // url을 get 형태로 작성했으므로 method는 생략 가능
        fetch(`/fetch?name=${info.name}&gender=${info.gender}`)
          .then((res) => {
            console.log(res);
            // return res.text();
            return res.json();
          })
          .then((result) => {
            console.log(result);
            resultBox.innerText = `GET FETCH 요청 완료: ${result.name}님의 성별은 ${result.gender}입니다`;
            resultBox.style.color = 'coral';
          })
          .catch((err) => {
            console.log(err);
          });
      }
      async function fetchPost() {
        const form = document.forms['register'];
        const info = {
          name: form.name.value,
          gender: form.gender.value,
        };

        try {
          const res = await fetch('/fetch', {
            method: 'post',
            headers: {
              'content-type': 'application/json',
            },
            body: JSON.stringify(info),
            // post 요청 시 object를 JSON으로 변경해서 보냄
          });
          const result = await res.json();
          resultBox.innerText = `POST FETCH 요청 완료: ${result.name}님의 성별은 ${result.gender}입니다`;
          resultBox.style.color = 'skyblue';
        } catch (err) {
          console.log('error: ' + err);
        }
      }
    </script>
  </body>
</html>
