<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="/socket.io/socket.io.js"></script>
    <title>Chat</title>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      #container {
        width: 500px;
        min-height: 700px;
        background-color: skyblue;
        display: flex;
        flex-wrap: wrap;
        align-content: flex-end;
      }
      #message_container {
        width: 100%;
        height: 600px;
        padding: 10px;
      }
      #form_container {
      }
      #chat_form {
        width: 100%;
        height: 100px;
      }
      #chat_form input {
        width: 400px;
        height: 100%;
      }
      #chat_form button {
        width: 100px;
        height: 100%;
      }
      #message_container div {
        width: 100%;
        height: 50px;
        margin: 3px;
      }
      #message_container div p {
        width: 300px;
        min-height: 42px;
        line-height: 42px;
        border-radius: 5px;
        margin: auto 0;
        padding: 5px;
      }
      .myMsg {
      }
      .myMsg p {
        background-color: yellow;
      }
      .msg {
      }
      .msg p {
        background-color: white;
      }
    </style>
  </head>
  <body>
    <div id="container">
      <div id="message_container"></div>
      <div id="form_container">
        <form id="chat_form"><input type="text" id="message" /><button>전송</button></form>
      </div>
    </div>
    <script>
      // socket 연결
      const socket = io();
      const form = document.querySelector('#chat_form');
      const msgContainer = document.querySelector('#message_container');

      // 서버 측에 메시지 전송
      form.addEventListener('submit', (e) => {
        e.preventDefault();
        const inputMsg = form.querySelector('#message');
        const message = inputMsg.value;
        if (!message.trim()) return;
        socket.emit('send_message', message);
        inputMsg.value = '';
      });

      socket.on('message_render', (message, id) => {
        const msgDiv = document.createElement('div');
        const p = document.createElement('p');
        p.innerText = message;
        if (socket.id === id) {
          msgDiv.className = 'myMsg';
        } else {
          msgDiv.className = 'msg';
        }
        msgDiv.append(p);
        msgContainer.append(msgDiv);
        // console.log('message:', message);
        // console.log('id:', id);
        console.log(socket.id);
      });
    </script>
  </body>
</html>
