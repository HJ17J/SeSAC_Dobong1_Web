<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Websocket 사용해보기</title>
  </head>
  <body>
    <h4>채팅방</h4>
    <h5>채팅 내용</h5>
    <ul></ul>

    <h5>채팅 입력</h5>
    <form id="chat">
      <label>이름: <input type="text" id="name" /></label><br />
      <label>내용: <input type="text" id="msg" /></label><br />
      <button>입력</button>
    </form>
    <script>
      // form submit시 이벤트
      const chatForm = document.getElementById('chat');
      const ul = document.querySelector('ul');

      chatForm.addEventListener('submit', (e) => {
        e.preventDefault(); // submit시 새로고침 막음
        const id = chatForm.querySelector('#name');
        const msg = chatForm.querySelector('#msg');
        const chatData = {
          name: id.value,
          msg: msg.value,
        };
        // socket.send(chatData); // [object Object], object > string으로 변경해야 함
        const chatDataStr = JSON.stringify(chatData); // {"name":"현","msg":"hello"}
        socket.send(chatDataStr);

        id.value = '';
        msg.value = '';
      });

      /*
          Websocket 객체의 이벤트
          - open: 웹소켓 서버에 연결되었을 때
          - message: 서버에서 메세지를 받았을 때 (메세지를 주고받을 때)
          - error: 에러 상황
          - close: 웹소켓 연결 종료
      */

      // 웹소켓 서버 접속 (client)
      const socket = new WebSocket('ws://localhost:8080');
      socket.addEventListener('open', () => {
        console.log('서버 연결');
        // socket.send('🚶...채팅방 입장...🚶‍♀️');
      });

      // 메시지 전달받음
      socket.addEventListener('message', (e) => {
        // console.log('서버에게 받은 메세지', e.data); // 서버 측에서 전달한 메시지
        // string to object 파싱
        const data = JSON.parse(e.data); // obj
        console.log(data);

        const li = document.createElement('li');
        li.textContent = `${data.name}: ${data.msg}`;
        ul.append(li);
      });

      // 에러 발생 시
      socket.addEventListener('error', (e) => {
        console.log('error!');
        console.log(e.console.error);
      });

      // 서버와 연결 종료
      socket.addEventListener('close', () => {
        console.log('서버와 연결 종료');
      });
    </script>
  </body>
</html>
